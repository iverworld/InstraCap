@{
    ViewBag.Title = "Search";
}

<div class="col-xs-6 col-md-6 col-lg-6 container">
    <textarea id="caps" style="height:100%;width:100%;max-width:inherit"></textarea>
</div>
<div class="col-xs-6 col-md-6 col-lg-6 container">
    <textarea id="result" style="height:100%;width:100%;max-width:inherit" readonly>
    </textarea>
</div>

@section scripts{
    <script>
        var SearchTextResult = {};

        $('#caps').on('change keyup paste', function () {
            var input = $('#caps').val();
            var inputList = input
                            .substring(Math.max(0, input.indexOf("#")), input.length)
                            .replace(/\n/g, '')
                            .replace(/\ /g, '')
                            .split('#');
            SearchTextResult = {};
            $('#result').val('');
            for (var k in inputList) {
                if (!!inputList[k]) {
                    SearchTextResult[inputList[k]] = '';
                }
            }
            getIgTagCounts();
        });

        addCommas = function(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }

        isHashTagValid = function (key) {
            return (!!key.length || key[0] !== '#')
        };

        getIgTagCounts = function () {
            for (var key in SearchTextResult){
                if (!!key && isHashTagValid(key)) {
                    $.ajax({
                        type: "GET",
                        dataType: "jsonp",
                        cache: false,
                        url: "https://api.instagram.com/v1/tags/{tag-name}?access_token={access-token}"
                                .replace("{tag-name}", key)
                                .replace("{access-token}", '@Model.Code'),
                        async: false,
                        success: function (data) {
                            if (data.meta.code === 200) {
                                // SearchTextResult.push(data.data.media_count);
                                if (data.data.name in SearchTextResult) {
                                    SearchTextResult[data.data.name] = data.data.media_count;
                                    updateUI();
                                }
                            }
                            else {
                                // SearchTextResult[k] = '';
                            }
                        },
                        error: function (data) {
                            // SearchTextResult[k] = '';
                        }
                    })
                }
                else {
                    // SearchTextResult[k] = '';
                }
            }
        };

        updateUI = function () {
            var printResult = [];
            var sortResult = update();
            sortResult.forEach(function (element, index, array) {
                printResult.push(element[0] + " : " + addCommas(element[1]) + " posts");
            });
            $('#result').val(printResult.join('\n'));
        }

        update = function () {
            var printResult = [];
            var copySearchTextResult = SearchTextResult;
            var sortResult = [];
            for (var k in copySearchTextResult) {
                if (!!copySearchTextResult[k]) {
                    sortResult.push([k, copySearchTextResult[k]]);
                }
            }

            sortResult.sort(function (a, b) { return b[1] - a[1] });
            return (sortResult);
        }

    </script>
}


